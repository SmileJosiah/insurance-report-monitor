<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.paopaolee.monitor.dao.ds1.TuanyixianDao">
    <select
            id="getReportDataStatistic"
            resultMap="com.paopaolee.monitor.dao.ds1.GexianDao.statisticMap"
            resultType="com.paopaolee.monitor.bean.ReportDataStatistic"
    >
    <![CDATA[
        select
        round(sum(settlement_price)/10000),
        round(sum(eco_premium)/10000)
        from (
        select
        i.pay_amount  settlement_price,
        i.brokerage_amount eco_premium
        from product_group.t_insure i
        where
        i.out_order_time >= DATE_SUB(CURDATE(),INTERVAL 1 day)
        and i.out_order_time < CURDATE()
        union all
        select
        t.pay_amount  settlement_price,
        t.brokerage_amount eco_premium
        from product_group.t_insure_offline t
        where
        t.deleted=0
        and t.create_time >= DATE_SUB(CURDATE(),INTERVAL 1 day)
        and t.create_time < CURDATE()
        union all
        select
        t.pay_amount  settlement_price,
        t.brokerage_amount eco_premium
        from product_group.t_insure_offline_change t
        where
        t.deleted=0
        and t.create_time >= DATE_SUB(CURDATE(),INTERVAL 1 day)
        and t.create_time < CURDATE()
        union all
        select
        i.pay_amount  settlement_price,
        i.brokerage_amount eco_premium
        from product_group.t_insure_change i
        where
        i.out_order_time >= DATE_SUB(CURDATE(),INTERVAL 1 day)
        and i.out_order_time < CURDATE()
        union all
        select
        t.return_amount  settlement_price,
        t.brokerage_amount eco_premium
        from product_group.t_insure_return t
        join product_group.t_insure i
        on t.insure_no = i.insure_no
        where
        t.status = 6
        and t.create_time >= DATE_SUB(CURDATE(),INTERVAL 1 day)
        and t.create_time < CURDATE()
        union all
        select
        t.return_amount  settlement_price,
        t.brokerage_amount eco_premium
        from product_group.t_insure_return t
        join product_group.t_insure_offline o
        on t.insure_no = o.insure_no
        where
        t.status = 6
        and t.create_time >= DATE_SUB(CURDATE(),INTERVAL 1 day)
        and t.create_time < CURDATE()
        ) vv
    ]]>
    </select>
</mapper>